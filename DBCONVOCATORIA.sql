-- SINTAXIS [TIPO-CONSTRAINT]_[TABLE-LOCAL]_[TABLE-FORANEA]_[NOMBRE-CODIGO]
-- modelo https://upload.wikimedia.org/wikipedia/commons/b/b6/Diagrama_Entidad-Relacion.jpg
set SERVEROUT on format wrapped;
 -- CREATE TABLE NOMBRE ();
 
 -- TABLAS INDEPENDIENTES
 CREATE TABLE CLASES ( 
    CLA_CODIGO VARCHAR2(4),
    CLA_TIPO  VARCHAR2 (50),
    CONSTRAINT PK_CLA_CODIGO PRIMARY KEY (CLA_CODIGO)
 );
 
 INSERT INTO CLASES (CLA_CODIGO, CLA_TIPO)
    VALUES   ('CL00', 'PRIMERA CLASE');
 INSERT INTO CLASES (CLA_CODIGO, CLA_TIPO)
    VALUES   ('CL01', 'CLASE ECONOMICA');
    
 
 CREATE  TABLE AVIONES (
    AVI_CODIGO VARCHAR2(4),
    AVI_MARCA VARCHAR2 (50),
    AVI_ESTADO VARCHAR2 (20), 
    CONSTRAINT PK_AVI_CODIGO PRIMARY KEY (AVI_CODIGO)
 );
 
INSERT INTO AVIONES (AVI_CODIGO, AVI_MARCA, AVI_ESTADO)
    VALUES ( 'AV00','Airbus','1');
 INSERT INTO AVIONES (AVI_CODIGO, AVI_MARCA, AVI_ESTADO)
    VALUES ( 'AV01','Cessna','0');
 INSERT INTO AVIONES (AVI_CODIGO, AVI_MARCA, AVI_ESTADO)
    VALUES ( 'AV02','Piper','0');
 INSERT INTO AVIONES (AVI_CODIGO, AVI_MARCA, AVI_ESTADO)
    VALUES ( 'AV03','Cirrus','1');
 INSERT INTO AVIONES (AVI_CODIGO, AVI_MARCA, AVI_ESTADO)
    VALUES ( 'AV04','Diamond','0');
 INSERT INTO AVIONES (AVI_CODIGO, AVI_MARCA, AVI_ESTADO)
    VALUES ( 'AV05','Mooney','0');
 INSERT INTO AVIONES (AVI_CODIGO, AVI_MARCA, AVI_ESTADO)
    VALUES ( 'AV06','Beechcraft','1');
 INSERT INTO AVIONES (AVI_CODIGO, AVI_MARCA, AVI_ESTADO)
    VALUES ( 'AV07','Dehavilland','1');
 INSERT INTO AVIONES (AVI_CODIGO, AVI_MARCA, AVI_ESTADO)
    VALUES ( 'AV08','Tecnam','1');
 
 
 CREATE TABLE HORARIOS (
    HOR_CODIGO VARCHAR2(4), 
    HOR_HORADEVUELO VARCHAR(7), -- 00:00AM
    CONSTRAINT PK_HOR_CODIGO PRIMARY KEY (HOR_CODIGO)
 );
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR0','0:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR1','1:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR2','2:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR3','3:00'); 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR4','4:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR5','5:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR6','6:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR7','7:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR8','8:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR9','9:00'); 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR10','10:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR11','11:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR12','12:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR13','13:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR14','14:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR15','15:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR16','16:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR17','17:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR18','18:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR19','19:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR20','20:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR21','21:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR22','22:00');
 
INSERT INTO HORARIOS (HOR_CODIGO, HOR_HORADEVUELO)
        VALUES ( 'HR23','23:00');
 
  
 -- TABLAS DEPENDIENTES
 CREATE TABLE DESTINOS (
    DES_CODIGO VARCHAR2(5),
    DES_NOMBRE VARCHAR2(200),
    HOR_CODIGO VARCHAR2(5),
    CONSTRAINT PK_DES_CODIGO PRIMARY KEY (DES_CODIGO),
    CONSTRAINT FK_DES_HOR_CODIGO FOREIGN KEY (HOR_CODIGO) REFERENCES HORARIOS (HOR_CODIGO)
 );
 
INSERT INTO DESTINOS (DES_CODIGO, DES_NOMBRE, HOR_CODIGO )
            VALUES ( 'DE0','Tokio', 'HR22' );
 INSERT INTO DESTINOS (DES_CODIGO, DES_NOMBRE, HOR_CODIGO )
            VALUES ( 'DE1','Nueva York', 'HR5' );
 INSERT INTO DESTINOS (DES_CODIGO, DES_NOMBRE, HOR_CODIGO )
            VALUES ( 'DE2','Los Ángeles', 'HR14' );
 INSERT INTO DESTINOS (DES_CODIGO, DES_NOMBRE, HOR_CODIGO )
            VALUES ( 'DE3','Seúl', 'HR6' );
 INSERT INTO DESTINOS (DES_CODIGO, DES_NOMBRE, HOR_CODIGO )
            VALUES ( 'DE4','Londres', 'HR6' );
 INSERT INTO DESTINOS (DES_CODIGO, DES_NOMBRE, HOR_CODIGO )
            VALUES ( 'DE5','París', 'HR15' );
 INSERT INTO DESTINOS (DES_CODIGO, DES_NOMBRE, HOR_CODIGO )
            VALUES ( 'DE6','Osaka', 'HR5' );
 INSERT INTO DESTINOS (DES_CODIGO, DES_NOMBRE, HOR_CODIGO )
            VALUES ( 'DE7','Shanghái', 'HR22' );
 INSERT INTO DESTINOS (DES_CODIGO, DES_NOMBRE, HOR_CODIGO )
            VALUES ( 'DE8','Chicago', 'HR22' );
 INSERT INTO DESTINOS (DES_CODIGO, DES_NOMBRE, HOR_CODIGO )
            VALUES ( 'DE9','Moscú', 'HR9' );
 INSERT INTO DESTINOS (DES_CODIGO, DES_NOMBRE, HOR_CODIGO )
            VALUES ( 'DE10','Pekín', 'HR5' );
 INSERT INTO DESTINOS (DES_CODIGO, DES_NOMBRE, HOR_CODIGO )
            VALUES ( 'DE11','Colonia', 'HR7' );
 INSERT INTO DESTINOS (DES_CODIGO, DES_NOMBRE, HOR_CODIGO )
            VALUES ( 'DE12','Houston', 'HR10' );
 INSERT INTO DESTINOS (DES_CODIGO, DES_NOMBRE, HOR_CODIGO )
            VALUES ( 'DE13','Washington D. C.', 'HR9' );
 INSERT INTO DESTINOS (DES_CODIGO, DES_NOMBRE, HOR_CODIGO )
            VALUES ( 'DE14','Medellin', 'HR19' );
 INSERT INTO DESTINOS (DES_CODIGO, DES_NOMBRE, HOR_CODIGO )
            VALUES ( 'DE15','Bogota', 'HR16' );
 
 CREATE TABLE VUELOS (
    VUE_CODIGO VARCHAR2(5), 
    VUE_DISPONIBILIAD NUMBER(2),   
    AVI_CODIGO VARCHAR2(5),
    DES_CODIGO VARCHAR2(5),
    CONSTRAINT PK_VUE_CODIGO PRIMARY KEY (VUE_CODIGO),
     CONSTRAINT FK_VUE_AVI_CODIGO FOREIGN KEY (AVI_CODIGO) REFERENCES AVIONES (AVI_CODIGO) ,
     CONSTRAINT FK_VUE_DES_CODIGO FOREIGN KEY (DES_CODIGO) REFERENCES DESTINOS (DES_CODIGO)
     
 );
 
 
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU0', 37 , 'AV01' , 'DE15' );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU1', 17 , 'AV03' , 'DE0'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU2', 11 , 'AV08' , 'DE1'  );
INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU3', 79 , 'AV05' , 'DE10'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU4', 57 , 'AV07' , 'DE7'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU5', 16 , 'AV02' , 'DE4'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU6', 65 , 'AV08' , 'DE15'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU7', 90 , 'AV01' , 'DE15'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU8', 39 , 'AV03' , 'DE9'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU9', 99 , 'AV05' , 'DE3'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU10', 39 , 'AV00' , 'DE3'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU11', 86 , 'AV07' , 'DE1'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU12', 42 , 'AV08' , 'DE8'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU13', 44 , 'AV00' , 'DE8'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU14', 22 , 'AV05' , 'DE1'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU15', 46 , 'AV05' , 'DE0'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU16', 88 , 'AV04' , 'DE12'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU17', 75 , 'AV08',  'DE0'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU18', 43 , 'AV01' , 'DE3'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU19', 67 , 'AV01' , 'DE4'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU20', 38 , 'AV07' , 'DE4'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU21', 15 , 'AV08' , 'DE6'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU22', 68 , 'AV08' , 'DE15'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU23', 30 , 'AV02' , 'DE0'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU24', 42 , 'AV03' , 'DE1'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU25', 14 , 'AV04' , 'DE14'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU26', 27 , 'AV04' , 'DE11'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU27', 15 , 'AV06' , 'DE15'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU28', 36 , 'AV06' , 'DE0'  );
 INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU29', 0 , 'AV00' , 'DE12'  );
INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU30', 0 , 'AV02'  , 'DE9' );
INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU31', 0 , 'AV01'  , 'DE11' );
INSERT INTO VUELOS (VUE_CODIGO, VUE_DISPONIBILIAD, AVI_CODIGO, DES_CODIGO ) 
        VALUES ( 'VU32', 0 , 'AV07' , 'DE2'  );
        
CREATE TABLE ESTADOSDERESERVAS (
    STATES_CODIGO VARCHAR2(4),
    STATES_NOMBRE VARCHAR2(45),
    CONSTRAINT PK_STATES_CODIGO PRIMARY KEY (STATES_CODIGO) 
);

 INSERT INTO ESTADOSDERESERVAS (STATES_CODIGO, STATES_NOMBRE)
    VALUES ( 'ES00' , 'CREADA' );
     INSERT INTO ESTADOSDERESERVAS (STATES_CODIGO, STATES_NOMBRE)
    VALUES ( 'ES01' , 'CANCELADA' );
     INSERT INTO ESTADOSDERESERVAS (STATES_CODIGO, STATES_NOMBRE)
    VALUES ( 'ES02' , 'EN ESPERA' );
 
  CREATE TABLE RESERVAS (
    RES_CODIGO VARCHAR2(5),
    CLA_TIPODEVUELO VARCHAR2(4), -- TABLA CLASES,
    STATES_ESTADODERESERVA VARCHAR2(4),
    VUE_CODIGO VARCHAR2(5),
    CONSTRAINT PK_RES_CODIGO PRIMARY KEY (RES_CODIGO),
    CONSTRAINT FK_RES_CLA_CODIGO FOREIGN KEY (CLA_TIPODEVUELO) REFERENCES CLASES (CLA_CODIGO),
    CONSTRAINT FK_RES_STATES_ESTADODERESERVA FOREIGN KEY (STATES_ESTADODERESERVA) REFERENCES ESTADOSDERESERVAS (STATES_CODIGO),
    CONSTRAINT FK_RES_VUE_CODIGO FOREIGN KEY (VUE_CODIGO) REFERENCES VUELOS (VUE_CODIGO)
  );
  
  INSERT INTO RESERVAS (RES_CODIGO, CLA_TIPODEVUELO, STATES_ESTADODERESERVA, VUE_CODIGO) 
    VALUES ( 'RE0', 'CL01', 'ES02', 'VU12' );
 INSERT INTO RESERVAS (RES_CODIGO, CLA_TIPODEVUELO, STATES_ESTADODERESERVA, VUE_CODIGO) 
    VALUES ( 'RE1', 'CL00', 'ES01', 'VU8' );
 INSERT INTO RESERVAS (RES_CODIGO, CLA_TIPODEVUELO, STATES_ESTADODERESERVA, VUE_CODIGO) 
    VALUES ( 'RE2', 'CL01', 'ES02', 'VU9' );
 INSERT INTO RESERVAS (RES_CODIGO, CLA_TIPODEVUELO, STATES_ESTADODERESERVA, VUE_CODIGO) 
    VALUES ( 'RE3', 'CL01', 'ES01', 'VU16' );
 INSERT INTO RESERVAS (RES_CODIGO, CLA_TIPODEVUELO, STATES_ESTADODERESERVA, VUE_CODIGO) 
    VALUES ( 'RE4', 'CL01', 'ES00', 'VU18' );
 INSERT INTO RESERVAS (RES_CODIGO, CLA_TIPODEVUELO, STATES_ESTADODERESERVA, VUE_CODIGO) 
    VALUES ( 'RE5', 'CL01', 'ES02', 'VU6' );
 INSERT INTO RESERVAS (RES_CODIGO, CLA_TIPODEVUELO, STATES_ESTADODERESERVA, VUE_CODIGO) 
    VALUES ( 'RE6', 'CL00', 'ES02', 'VU8' );
 INSERT INTO RESERVAS (RES_CODIGO, CLA_TIPODEVUELO, STATES_ESTADODERESERVA, VUE_CODIGO) 
    VALUES ( 'RE7', 'CL01', 'ES02', 'VU5' );
  

 CREATE TABLE CLIENTES (
    CLI_CEDULA NUMBER(10),
    CLI_NOMBRECOMPLETO VARCHAR2 (90),
    CLI_FECHADENACIMIENTO DATE,
    CLI_SEXO CHAR(1),
    CLI_EMAIL VARCHAR2(60),
    CONSTRAINT PK_CLI_CEDULA PRIMARY KEY (CLI_CEDULA)
    -- CONSTRAINT FK_CLI_RES_CODIGO FOREIGN KEY (RES_CODIGO) REFERENCES RESERVAS (RES_CODIGO)
 );

 INSERT INTO CLIENTES (CLI_CEDULA,  CLI_NOMBRECOMPLETO, CLI_FECHADENACIMIENTO, CLI_SEXO, CLI_EMAIL  )
    VALUES (0938420348,  'Marilyn Gonzalez', '1-1-1972', 'F','marilyn.gonzalez65@example.com'  );
    
INSERT INTO CLIENTES (CLI_CEDULA,  CLI_NOMBRECOMPLETO, CLI_FECHADENACIMIENTO, CLI_SEXO, CLI_EMAIL  )
    VALUES (3059702958,  'Kyle Mills', '3/4/1974', 'M','kyle.mills83@example.com' );
    
INSERT INTO CLIENTES (CLI_CEDULA,  CLI_NOMBRECOMPLETO, CLI_FECHADENACIMIENTO, CLI_SEXO, CLI_EMAIL  )
    VALUES (0956839587, 'Anne Shelton', '5/3/1972', 'F','anne.shelton62@example.com' );
    
INSERT INTO CLIENTES (CLI_CEDULA,  CLI_NOMBRECOMPLETO, CLI_FECHADENACIMIENTO, CLI_SEXO, CLI_EMAIL   )
    VALUES (2833998866,  'Jill Hopkins', '4/2/1979', 'F','jill.hopkins49@example.com');
    
INSERT INTO CLIENTES (CLI_CEDULA,  CLI_NOMBRECOMPLETO, CLI_FECHADENACIMIENTO, CLI_SEXO, CLI_EMAIL   )
    VALUES (4500876587,  'Leslie Mccoy', '8/3/1977', 'M', 'leslie.mccoy18@example.com'  );
    
INSERT INTO CLIENTES (CLI_CEDULA,  CLI_NOMBRECOMPLETO, CLI_FECHADENACIMIENTO, CLI_SEXO, CLI_EMAIL  )
    VALUES (9876543211,  'Sebastian Olson', '2/7/1977', 'M','sebastian.olson41@example.com'  );
    
INSERT INTO CLIENTES (CLI_CEDULA,  CLI_NOMBRECOMPLETO, CLI_FECHADENACIMIENTO, CLI_SEXO, CLI_EMAIL  )
    VALUES (8967452310,  'Sophia Mitchelle', '2/7/1977', 'F','sophia.mitchelle78@example.com'  );
    
INSERT INTO CLIENTES (CLI_CEDULA,  CLI_NOMBRECOMPLETO, CLI_FECHADENACIMIENTO, CLI_SEXO, CLI_EMAIL  )
    VALUES (1928374567,  'Kent Hayes', '8/3/1981', 'M','kent.hayes22@example.com'  );

INSERT INTO CLIENTES (CLI_CEDULA,  CLI_NOMBRECOMPLETO, CLI_FECHADENACIMIENTO, CLI_SEXO, CLI_EMAIL  )
    VALUES (1054562346,  'Oscar Guzman', '8/3/1981', 'M','oscar.g@example.com'  );
    
    
    
CREATE TABLE RESERVASDECLIENTES (
    RECLI_CODIGO VARCHAR(7),
    CLI_CEDULA NUMBER(10),
    RES_CODIGO VARCHAR2(4),
    CONSTRAINT PK_RECLI_CODIGO PRIMARY KEY (RECLI_CODIGO),
    CONSTRAINT FK_CLI_CEDULA FOREIGN KEY (CLI_CEDULA) REFERENCES CLIENTES (CLI_CEDULA),
    CONSTRAINT FK_RES_CODIGO FOREIGN KEY (RES_CODIGO) REFERENCES RESERVAS (RES_CODIGO)
);

INSERT INTO RESERVASDECLIENTES 
    VALUES ('RECLI00' ,1928374567 ,  'RE0' );
INSERT INTO RESERVASDECLIENTES 
    VALUES ('RECLI01' ,1928374567 ,  'RE1' );
INSERT INTO RESERVASDECLIENTES 
    VALUES ('RECLI02' ,1928374567 ,  'RE2' );
INSERT INTO RESERVASDECLIENTES 
    VALUES ('RECLI03' ,1928374567 ,  'RE3' );
INSERT INTO RESERVASDECLIENTES 
    VALUES ('RECLI04' ,1928374567 ,  'RE4' );
INSERT INTO RESERVASDECLIENTES 
    VALUES ('RECLI05' ,1928374567 ,  'RE5' );
INSERT INTO RESERVASDECLIENTES 
    VALUES ('RECLI06' ,1928374567 ,  'RE6' );
INSERT INTO RESERVASDECLIENTES 
    VALUES ('RECLI07' ,1054562346 ,  'RE7' );

 -- ==========================================
 -- ============ PROCEDIMIENTOS =================
 -- ==========================================
 CREATE OR REPLACE PROCEDURE PR_VERESTADODEAVIONES
 AS
    CURSOR C_ESTADOAVIONES IS SELECT * FROM AVIONES;
    row_aviones C_ESTADOAVIONES%ROWTYPE;
 BEGIN
    dbms_output.put_line('Estado actual de los aviones de la aereolinea');
    OPEN C_ESTADOAVIONES;
    FETCH C_ESTADOAVIONES INTO row_aviones;
    WHILE C_ESTADOAVIONES%FOUND LOOP
        IF (row_aviones.AVI_ESTADO = 0 ) THEN 
            dbms_output.put_line('Avion: ' || row_aviones.AVI_MARCA || ' en funcionamiento');
        ELSE 
            dbms_output.put_line('Avion: ' || row_aviones.AVI_MARCA || ' require mantenimiento');
        END IF;
        FETCH C_ESTADOAVIONES INTO row_aviones;
    END LOOP; 
    CLOSE C_ESTADOAVIONES;
 END;
 EXEC  PR_VERESTADODEAVIONES();

 CREATE OR REPLACE PROCEDURE PR_VERESTADODEAVION( codigoAvion AVIONES.AVI_CODIGO%TYPE )
 AS
    CURSOR C_ESTADOAVIONES IS SELECT * FROM AVIONES WHERE AVI_CODIGO = codigoAvion;
    row_aviones C_ESTADOAVIONES%ROWTYPE;
 BEGIN
    OPEN C_ESTADOAVIONES;
    FETCH C_ESTADOAVIONES INTO row_aviones;
    WHILE C_ESTADOAVIONES%FOUND LOOP
        IF (row_aviones.AVI_ESTADO = 0 ) THEN 
            dbms_output.put_line('Avion: ' || row_aviones.AVI_MARCA || ' en funcionamiento');
        ELSE 
            dbms_output.put_line('Avion: ' || row_aviones.AVI_MARCA || ' require mantenimiento');
        END IF;
        FETCH C_ESTADOAVIONES INTO row_aviones;
    END LOOP; 
    CLOSE C_ESTADOAVIONES;
 END;
 EXEC  PR_VERESTADODEAVION('AV03');
 
  -- HACER UN PROCEDURE AL QUE SE LE PASE EL CORREO Y REGRESE LOS DESTINOS DE LAS RESERVAS
 CREATE OR REPLACE PROCEDURE  PR_VERRESERVAS ( correo CLIENTES.CLI_EMAIL%TYPE)
 AS 
   CURSOR c_destinosCliente IS SELECT 
    DESTINOS.DES_NOMBRE
 FROM 
    CLIENTES,
    RESERVASDECLIENTES,
    RESERVAS,
    VUELOS,
    DESTINOS
WHERE 
    CLIENTES.CLI_EMAIL = correo
    AND CLIENTES.CLI_CEDULA = RESERVASDECLIENTES.CLI_CEDULA
    AND RESERVAS.RES_CODIGO = RESERVASDECLIENTES.RES_CODIGO
    AND  RESERVAS.VUE_CODIGO = VUELOS.VUE_CODIGO
    AND VUELOS.DES_CODIGO = DESTINOS.DES_CODIGO; 
    
    row_destinos c_destinosCliente%ROWTYPE; 

 BEGIN 
     dbms_output.put_line('Este individuo ha viajado a:');
    OPEN c_destinosCliente;
    FETCH c_destinosCliente INTO row_destinos;
    WHILE c_destinosCliente%FOUND LOOP
        dbms_output.put_line(row_destinos.DES_NOMBRE);
        FETCH c_destinosCliente INTO row_destinos;
    END LOOP; 
    CLOSE c_destinosCliente;
 END; 
 EXEC PR_VERRESERVAS('kent.hayes22@example.com');
 
 -- PROCEDURE PARA CONTAR LOS VIAJES QUE HA HECHO UNA PERSONA 
  CREATE OR REPLACE PROCEDURE  PR_VERCANTIDADVIAJES ( correo CLIENTES.CLI_EMAIL%TYPE)
 AS 
    cantidadDeViajes NUMBER(2):= 0;
 
 BEGIN 
    
    SELECT 
        COUNT(*) INTO cantidadDeViajes
    FROM 
        CLIENTES,
        RESERVASDECLIENTES,
        RESERVAS,
        VUELOS,
        DESTINOS
    WHERE 
        CLIENTES.CLI_EMAIL = correo
        AND CLIENTES.CLI_CEDULA = RESERVASDECLIENTES.CLI_CEDULA
        AND RESERVAS.RES_CODIGO = RESERVASDECLIENTES.RES_CODIGO
        AND  RESERVAS.VUE_CODIGO = VUELOS.VUE_CODIGO
        AND VUELOS.DES_CODIGO = DESTINOS.DES_CODIGO; 
        
        
        IF cantidadDeViajes = 0 THEN 
            dbms_output.put_line('Este individuo nunca ha viajado ');
            
        ELSIF cantidadDeViajes = 1  THEN 
            dbms_output.put('Este individuo ha viajado ');
             dbms_output.put_line(cantidadDeViajes || ' vez' );
        ELSE  
             dbms_output.put('Este individuo ha viajado ');
             dbms_output.put_line(cantidadDeViajes || ' veces' );
        END IF;
        
END; 
 EXEC PR_VERCANTIDADVIAJES('leslie.mccoy18@example.com');
 
 -- PUESTOS DISPONIBLES EN UN VUELO 
 CREATE OR REPLACE PROCEDURE PR_PUESTOSRESTANTES(vueCode VUELOS.VUE_CODIGO%TYPE )
 AS
    canVuelosTotales VUELOS.VUE_DISPONIBILIAD%TYPE:= 99;
    canVuelosDisponibles VUELOS.VUE_DISPONIBILIAD%TYPE;
    operacion NUMBER(3);
        
 BEGIN
    SELECT VUE_DISPONIBILIAD INTO canVuelosDisponibles FROM VUELOS WHERE  VUE_CODIGO = vueCode ;
    operacion:=99 - canVuelosDisponibles;
    DBMS_OUTPUT.PUT_LINE(' El vuelo ' || vueCode  || ' tiene ' || operacion || ' puestos disponibles. ' );
 END;
 EXEC PR_PUESTOSRESTANTES( 'VU3' ) 
 
 -- ===========================================
 -- ============ FUNCIONES  ======================
 -- ===========================================
 -- REGRESA UNA FRASE DEPENDIENDO DEL GENERO 
 CREATE OR REPLACE FUNCTION FN_GENERO( CC CLIENTES.CLI_CEDULA%TYPE  )
 RETURN VARCHAR2
 IS
    sexo  CLIENTES.CLI_SEXO%TYPE; 
 BEGIN
    SELECT CLI_SEXO INTO sexo FROM CLIENTES WHERE CLI_CEDULA = CC;
    IF  sexo = 'M'  THEN 
        RETURN 'ES UN CERDO CAPITALISTA OPRESOR';
        ELSE
        RETURN 'ES UNA FEMINAZI PRRONA';
    END IF;
    
 END;
 SELECT CLI_NOMBRECOMPLETO, FN_GENERO(CLI_CEDULA) AS generoRealNoFake  FROM CLIENTES;
 
 -- REGRESE LA TIPO DE CLASE DE LA RESEVA 
 CREATE OR REPLACE FUNCTION FN_CLASEDERESERVA( reCode RESERVAS.RES_CODIGO%TYPE  ) 
 RETURN VARCHAR2
 IS
    txtReserva VARCHAR2(40);
 BEGIN
    SELECT 
        CLASES.CLA_TIPO INTO txtReserva 
    FROM  CLASES,  RESERVAS 
    WHERE RESERVAS.RES_CODIGO =  reCode
    AND CLASES.CLA_CODIGO = RESERVAS.CLA_TIPODEVUELO;
    RETURN txtReserva;
 END;
 SELECT  RES_CODIGO, FN_CLASEDERESERVA(RES_CODIGO)  FROM RESERVAS;
  
  -- REGRESAR EL ESTADO DE LA RESERVA  
  CREATE OR REPLACE FUNCTION FN_ESTADODERESERVA( reCode RESERVAS.RES_CODIGO%TYPE  ) 
 RETURN VARCHAR2
 IS
    txtReserva VARCHAR2(40);
 BEGIN
        SELECT 
        ESTADOSDERESERVAS.STATES_NOMBRE  INTO txtReserva
    FROM   RESERVAS, ESTADOSDERESERVAS 
    WHERE RESERVAS.RES_CODIGO = reCode
    AND ESTADOSDERESERVAS.STATES_CODIGO = RESERVAS.STATES_ESTADODERESERVA;
    RETURN txtReserva;
 END;
 SELECT RES_CODIGO,   FN_ESTADODERESERVA(RES_CODIGO)   FROM RESERVAS;
  
  
-- ============================================
-- ============ TRIGGERS  ========================
-- ============================================
-- RECORDAR AL CLIENTE QUE TIENE UNA RESERVA 
 
 -- CREATE OR REPLACE
 
 /*CREATE {OR REPLACE} FUNCTION nombre_func(param1 tipo,param2 tipo,... ) RETURN tipo_dato IS
  -- Declaración de variables locales
BEGIN
  -- Instrucciones de ejecución
[EXCEPTION]
  -- Instrucciones de excepción
END; */

 -- DROPEO MASIVO 
 DROP TABLE AVIONES;
 DROP TABLE HORARIOS;
 
 DROP TABLE DESTINOS;
 DROP TABLE VUELOS;
 DROP TABLE  RESERVAS;
 DROP TABLE  CLIENTES;
 DROP TABLE RESERVASDECLIENTES;
 
  -- CONSULTA DE PRUEBA
 SELECT 
    DESTINOS.DES_NOMBRE 
 FROM 
    CLIENTES,
    RESERVASDECLIENTES,
    RESERVAS,
    VUELOS,
    DESTINOS
WHERE 
    CLIENTES.CLI_EMAIL = 'kent.hayes22@example.com'
    AND CLIENTES.CLI_CEDULA = RESERVASDECLIENTES.CLI_CEDULA
    AND RESERVAS.RES_CODIGO = RESERVASDECLIENTES.RES_CODIGO
    AND  RESERVAS.VUE_CODIGO = VUELOS.VUE_CODIGO
    AND VUELOS.DES_CODIGO = DESTINOS.DES_CODIGO;
    
    
--Funciones creadas por gustavo 
 
create or replace FUNCTION  FUN_GETCANTIDADVIAJES ( correo CLIENTES.CLI_EMAIL%TYPE)
 RETURN NUMBER
 IS 
    cantidadDeViajes NUMBER(2):= 0;
 BEGIN 

    SELECT 
        COUNT(*) INTO cantidadDeViajes
    FROM 
        CLIENTES,
        RESERVASDECLIENTES,
        RESERVAS,
        VUELOS,
        DESTINOS
    WHERE 
        CLIENTES.CLI_EMAIL = correo
        AND CLIENTES.CLI_CEDULA = RESERVASDECLIENTES.CLI_CEDULA
        AND RESERVAS.RES_CODIGO = RESERVASDECLIENTES.RES_CODIGO
        AND  RESERVAS.VUE_CODIGO = VUELOS.VUE_CODIGO
        AND VUELOS.DES_CODIGO = DESTINOS.DES_CODIGO; 
    RETURN cantidadDeViajes;
END;

create or replace function FN_GET_VUELOS (AVI_ID AVIONES.AVI_CODIGO%type)
RETURN  NUMBER
IS
    cantidadDeVuelos NUMBER(2):= 0;
BEGIN
  SELECT 
        COUNT(*) INTO cantidadDeVuelos
        From VUELOS
        WHERE VUELOS.AVI_CODIGO=AVI_ID and VUELOS.;
    
        return cantidadDeVuelos;
END;

CREATE OR REPLACE FUNCTION FN_GETEMAIL_BY_CLIENT_ID (client_id CLIENTES.CLI_CEDULA%TYPE)
RETURN VARCHAR2
IS
    user_email VARCHAR2(80);
Begin
    Select
        CLIENTES.CLI_EMAIL INTO user_email
    From CLIENTES 
    WHERE CLIENTES.CLI_CEDULA=client_id;
    return user_email;
END;
--procedimientos creados por Gustavo
CREATE or REPLACE PROCEDURE proc_mail_message(
   to_mail CLIENTES.CLI_EMAIL%type,
   subject varchar2,message varchar2) 
IS
BEGIN
        dbms_output.put_line('Enviando mensaje');
        dbms_output.put_line('Hola' || to_mail || subject || message);
        
END;

--triggers creados por Gustavo

CREATE OR REPLACE TRIGGER tg_give_promotion after insert on RESERVASDECLIENTES for EACH ROW
declare
email VARCHAR2(80);
numReserves NUMBER(2);
BEGIN
    email:= FN_GETEMAIL_BY_CLIENT_ID(:New.RECLI_CODIGO);
    numReserves:=FUN_GETCANTIDADVIAJES(email);
    IF numReserves >10 then
         dbms_output.put_line('El usuario' || :new.RECLI_CODIGO       || 'Ha ganado un 10% de descuento por ser un cliente frecuente');
    END IF;
END;

create or replace trigger tg_notify_new_airplane after insert on AVIONES  for each row
declare 
 CURSOR C_CLIENTES IS SELECT * FROM CLIENTES;
    row_cliente C_CLIENTES%ROWTYPE;
BEGIN
 OPEN C_CLIENTES;
    FETCH C_CLIENTES INTO row_cliente;
    WHILE C_CLIENTES%FOUND LOOP
        proc_mail_message(row_cliente.CLI_EMAIL,:NEW.AVI_MARCA,'Hemos adquirido un nuevo avión para nuestra aerolinea,VEN A DISFRUTAR!!');
        FETCH C_CLIENTES INTO row_cliente;
    END LOOP; 
    CLOSE C_CLIENTES;
END;


CREATE OR REPLACE TRIGGER TG_WELCOME_MESSAGE AFTER INSERT ON CLIENTES FOR EACH ROW
BEGIN
       proc_mail_message(:NEW.CLI_EMAIL,'Gracias por ayudarnos a crecer','Bienvenido a tu aerolinea GRACIAS POR USAR NUESTROS SERVICIOS!!');
END;


CREATE OR REPLACE TRIGGER TG_SHOULDNOT_ADD_AIRPLANEBAD BEFORE INSERT ON AVIONES FOR EACH ROW
BEGIN
    IF :NEW.AVI_ESTADO=1 THEN 
        RAISE_APPLICATION_ERROR(-20010, 'Según las politicas de la empresa no se permiten añadir aviones en mal estado a la flota');
    END IF;
END;

create or replace trigger TG_ONDELETE_RESERVAS BEFORE DELETE ON RESERVAS FOR EACH ROW
begin
    if :OLD.STATES_ESTADODERESERVA='ES02' THEN
       RAISE_APPLICATION_ERROR(-20010, 'No se puede eliminar una reserva en espera');
    END IF;
end;


    